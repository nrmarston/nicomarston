---

---

<button
  id="themeToggle"
  class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm text-muted hover:text-(--secondary-foreground) font-medium transition-opacity p-2 hover:bg-(--secondary)"
>
  <svg width="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <g
      class="sun"
      stroke="currentColor"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      ><circle cx="12" cy="12" r="4"></circle><path
        d="M12 3v1m0 16v1m-9-9h1m16 0h1m-2.636-6.364l-.707.707M6.343 17.657l-.707.707m0-12.728l.707.707m11.314 11.314l.707.707"
      ></path></g
    >
    <path fill="currentColor" class="moon" d="M12 3a6 6 0 0 0 9 9a9 9 0 1 1-9-9"
    ></path>
  </svg>
</button>

<style>
  .sun {
    stroke: transparent;
    opacity: 0;
  }
  .moon {
    fill: var(--foreground);
    opacity: 1;
  }

  :global(.dark) .sun {
    stroke: var(--foreground);
    opacity: 1;
  }
  :global(.dark) .moon {
    fill: transparent;
    opacity: 0;
  }
</style>

<script is:inline>
  const theme = (() => {
    const localStorageTheme = localStorage?.getItem("theme") ?? "";
    if (["dark", "light"].includes(localStorageTheme)) {
      return localStorageTheme;
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document
    .getElementById("themeToggle")
    ?.addEventListener("click", handleToggleClick);
</script>
